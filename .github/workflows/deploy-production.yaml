# Workflow para CI/CD de microservicios en GCP Multi-País - PRODUCCIÓN
name: Build, Push, and Deploy APIs to Cloud Run

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      target_service:
        description: 'Service to deploy'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - api-users
          - api-orders

env:
  GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
  GCP_REGION: ${{ vars.GCP_REGION }}
  GAR_LOCATION: ${{ vars.GCP_REGION }}-docker.pkg.dev
  GAR_REPOSITORY: ${{ vars.GAR_REPOSITORY }}

jobs:
  build-push-and-deploy:
    name: Deploy ${{ matrix.service.name }}
    runs-on: ubuntu-latest
    environment:
      name: production
    permissions:
      contents: read
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        service:
          - name: api-users
            port: 3001
          - name: api-orders
            port: 3002

    steps:
      # 1. Descargar el código del repositorio
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2. Autenticación con Google Cloud
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      # 3. Configurar el SDK de Google Cloud
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      # 4. Autorizar Docker para Artifact Registry (ESTA ES LA CORRECCIÓN)
      - name: Configure Docker credentials
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }} --quiet

      # 5. Construir y subir la imagen Docker
      - name: Build and Push Docker Image
        if: github.event_name == 'push' || (github.event.inputs.target_service == 'all' || github.event.inputs.target_service == matrix.service.name)
        id: build-and-push
        run: |
          IMAGE_BASE_NAME="${{ env.GAR_LOCATION }}/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ matrix.service.name }}"
          IMAGE_SHA_TAG="$IMAGE_BASE_NAME:${{ github.sha }}"
          IMAGE_LATEST_TAG="$IMAGE_BASE_NAME:latest"

          docker build \
            --target production \
            -t "$IMAGE_SHA_TAG" \
            -t "$IMAGE_LATEST_TAG" \
            --build-arg APP_NAME=${{ matrix.service.name }} \
            --build-arg APP_PORT=${{ matrix.service.port }} \
            .

          echo "Pushing image to Artifact Registry..."
          docker push "$IMAGE_SHA_TAG"
          docker push "$IMAGE_LATEST_TAG"

          echo "image_name=$IMAGE_SHA_TAG" >> $GITHUB_OUTPUT

      # 6. Desplegar el servicio en Cloud Run
      - name: Deploy to Cloud Run
        if: steps.build-and-push.outcome == 'success'
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ matrix.service.name }}
          region: ${{ env.GCP_REGION }}
          image: ${{ steps.build-and-push.outputs.image_name }}
          allow_unauthenticated: true
