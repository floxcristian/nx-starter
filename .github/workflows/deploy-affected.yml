name: Deploy Affected APIs to Cloud Run

on:
  push:
    branches:
      - main
      - master

env:
  GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
  GCP_REGION: ${{ vars.GCP_REGION }}
  GAR_LOCATION: ${{ vars.GCP_REGION }}-docker.pkg.dev
  GAR_REPOSITORY: ${{ vars.GAR_REPOSITORY }}

jobs:
  # ##########################################################################
  # # JOB 1: DETERMINAR QUÉ APLICACIONES FUERON AFECTADAS
  # ##########################################################################
  determine-affected:
    name: Determine Affected Services
    runs-on: ubuntu-latest
    outputs:
      affected_matrix: ${{ steps.get-affected.outputs.affected_matrix }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Crucial para que Nx pueda comparar commits

      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10 # Asegúrate de que coincida con tu packageManager

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install Dependencies
        # Dejamos que las actions gestionen el caché automáticamente
        run: pnpm install --frozen-lockfile

      - name: Get Affected Services and Build Matrix
        id: get-affected
        run: |
          # Obtenemos la rama base del evento de GitHub para hacerlo más robusto
          BASE_BRANCH=$(jq -r '.repository.default_branch' "$GITHUB_EVENT_PATH")
          echo "Determining affected apps by comparing HEAD against origin/${BASE_BRANCH}..."

          # Usamos el comando moderno, apuntando a la rama base correcta
          AFFECTED_APPS=$(npx nx show projects --affected --type=app --base="origin/${BASE_BRANCH}" --head=HEAD --plain | tr '\n' ' ')
